@page "/login"

@using Puissance4API.DTO
@inject HttpClient Http
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<h3>Login</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="loginForm">
    <div>
        <label>Login:</label>
        <InputText @bind-Value="loginModel.Login" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="loginModel.Password" Type="password" />
    </div>
    <button type="submit">Login</button>
</EditForm>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p style="color:red">@ErrorMessage</p>
}

@code {
    private PlayerDTO loginModel = new();
    private string ErrorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/players/login", loginModel);
            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
                // Sauvegarder le token dans le localStorage
                await LocalStorage.SetItemAsync("authToken", result.Token);
                Navigation.NavigateTo("/");
            }
            else
            {
                ErrorMessage = "Invalid login or password.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred: {ex.Message}";
        }
    }

    public class LoginResponse
    {
        public string Token { get; set; }
        public PlayerResponseDTO Player { get; set; }
    }
}